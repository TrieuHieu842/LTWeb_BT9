type User {
  id: ID!
  fullname: String
  email: String
  phone: String
  categories: [Category]
  products: [Product]
}

type Category {
  id: ID!
  name: String
  images: String
  users: [User]
  products: [Product]
}

type Product {
  id: ID!
  title: String
  quantity: Int
  desc: String
  price: Float
  owner: User
  categories: [Category]
}

type Query {
  productsSortedByPrice: [Product]
  productsByCategory(categoryId: ID!): [Product]
  allProducts: [Product]
  allUsers: [User]
  allCategories: [Category]
  userById(id: ID!): User
  productById(id: ID!): Product
  categoryById(id: ID!): Category
}

input UserInput {
  fullname: String
  email: String
  password: String
  phone: String
}

input CategoryInput {
  name: String
  images: String
}

input ProductInput {
  title: String
  quantity: Int
  desc: String
  price: Float
  ownerId: ID
  categoryIds: [ID]
}

type Mutation {
  createUser(input: UserInput): User
  updateUser(id: ID!, input: UserInput): User
  deleteUser(id: ID!): Boolean

  createCategory(input: CategoryInput): Category
  updateCategory(id: ID!, input: CategoryInput): Category
  deleteCategory(id: ID!): Boolean

  createProduct(input: ProductInput): Product
  updateProduct(id: ID!, input: ProductInput): Product
  deleteProduct(id: ID!): Boolean
}
